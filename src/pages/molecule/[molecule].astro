---
import Base from '../../layouts/Base.astro';
import Main from '../../layouts/Main.astro';
import ComponentSvg from '../../components/ComponentSvg.astro'
import CompoundName from '../../components/CompoundName.astro';

interface SimilarMolecule {
    name: string
    psychonaut_name: string | null
    tripsit_name: string | null
    dist: number
}

interface NPSJsonFile {
    name: string
    psychonaut_name: string | null
    tripsit_name: string | null
    sim: Array<SimilarMolecule>
    synonyms: Array<string> | null
    svg: string
}

export async function getStaticPaths({ paginate } : any) {
	const allNPS = await Astro.glob<{ name : string }>('../../../data/json/*.json');
    return allNPS.map((x) => ({
        params: { molecule: x.name },
        props: x
    }))
}

const { name, psychonaut_name, tripsit_name, synonyms, svg, sim } = Astro.props as NPSJsonFile
---

<Base title="Compounds.">
	<Main active="home">
        <section class="main-width mt-8">
            <div class="w-full flex flex-col items-center mb-8">
                { svg && <ComponentSvg svg={svg} name={name}/> }
                <div class="flex flex-col text-xl">
                    {
                        tripsit_name && <a class="flex items-center" href={`https://drugs.tripsit.me/${tripsit_name}`} target="_blank">
                            <CompoundName name={tripsit_name} site="tripsit"/>
                            <p class="ml-4 mr-2 text-sm text-neutral-400">
                                Check on tripsit
                            </p>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 text-sm text-neutral-400">
                                <path fill-rule="evenodd" d="M3 4.25A2.25 2.25 0 015.25 2h5.5A2.25 2.25 0 0113 4.25v2a.75.75 0 01-1.5 0v-2a.75.75 0 00-.75-.75h-5.5a.75.75 0 00-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 00.75-.75v-2a.75.75 0 011.5 0v2A2.25 2.25 0 0110.75 18h-5.5A2.25 2.25 0 013 15.75V4.25z" clip-rule="evenodd" />
                                <path fill-rule="evenodd" d="M6 10a.75.75 0 01.75-.75h9.546l-1.048-.943a.75.75 0 111.004-1.114l2.5 2.25a.75.75 0 010 1.114l-2.5 2.25a.75.75 0 11-1.004-1.114l1.048-.943H6.75A.75.75 0 016 10z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    }
                    {
                        psychonaut_name && <a class="flex items-center" href={`https://psychonautwiki.org/wiki/${psychonaut_name}`} target="_blank">
                            <CompoundName name={psychonaut_name} site="psychonaut"/>
                            <p class="ml-4 mr-2 text-sm text-neutral-400">
                                Check on psychonaut
                            </p>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 text-sm text-neutral-400">
                                <path fill-rule="evenodd" d="M3 4.25A2.25 2.25 0 015.25 2h5.5A2.25 2.25 0 0113 4.25v2a.75.75 0 01-1.5 0v-2a.75.75 0 00-.75-.75h-5.5a.75.75 0 00-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 00.75-.75v-2a.75.75 0 011.5 0v2A2.25 2.25 0 0110.75 18h-5.5A2.25 2.25 0 013 15.75V4.25z" clip-rule="evenodd" />
                                <path fill-rule="evenodd" d="M6 10a.75.75 0 01.75-.75h9.546l-1.048-.943a.75.75 0 111.004-1.114l2.5 2.25a.75.75 0 010 1.114l-2.5 2.25a.75.75 0 11-1.004-1.114l1.048-.943H6.75A.75.75 0 016 10z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    }
                    {
                        synonyms && synonyms.length > 0 && <p class="leading-snug text-sm mt-4">
                            <span class="">Synonyms:</span>
                            <span class="font-gray font-light text-neutral-800">{synonyms.join(',')}</span>
                        </p>
                    }
                </div>
            </div>

            <div class="w-full flex flex-col items-center mt-16">
                <div class="w-full max-w-2xl flex flex-col">
                    <span class="text-xl font-bold">Most structurally similar compounds:</span>
                    <span class="text-neutral-600 text-sm mt-2">The percentage is a metric of how structurally similar those molecules are, which is often strongly correlated with their effects. Take these informations with a grain of salt for now we are improving our methods to analyse molecules. We will provide more information on how those similarities are computed later</span>
                    <div class="flex flex-col mt-4 gap-1">
                        { sim.map((x) => {
                            const sim = Math.pow(Math.max(100-x.dist, 0)/100, 4.);
                            const green = Math.round(255 * sim);
                            const red = Math.round(255 * (1-sim));
                            return <a href={`/molecule/${x.name}`} class="flex lg:flex-row flex-col items-center justify-between">
                                <div class="flex">
                                    <CompoundName name={x.tripsit_name} site="tripsit"/>
                                    <CompoundName name={x.psychonaut_name} site="psychonaut"/>
                                </div>
                                <span class="flex items-center w-full lg:w-min">
                                    <p class="text-sm text-neutral-600 text-sm mr-2">{`${(Math.round(sim * 1000) / 10).toFixed(1)}%`}</p>
                                    <div class="w-full lg:w-60 h-5 bg-neutral-200 rounded border border-neutral-300 overflow-hidden">
                                        <div
                                            class="h-full rounded text-xs"
                                            style={{
                                                width: `${100 * sim}%`,
                                                backgroundColor: `rgb(${red}, ${green}, 0)`,
                                            }}
                                        />
                                    </div>
                                </span>
                            </a>
                        }) }
                    </div>
                </div>
            </div>
        </section>
	</Main>
</Base>